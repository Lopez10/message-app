version: '3.9'
services:
  postgres:
    container_name: postgres
    image: postgres:13
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env.dev
    ports:
      - '5432:5432'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: message-backend
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env.dev
    entrypoint:
      [
        "sh",
        "-c",
        "npx prisma db push && pnpm start:migrate:dev"
      ]
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.dev
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  notification-service:
    container_name: notification-service
    build:
      context: ./service/notification
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env.dev

volumes:
  postgres:
    name: message-db
